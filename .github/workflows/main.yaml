name: BB

# on:
#   workflow_dispatch

on: 
  push:

jobs:
  
  generate-databricks-token:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.set-output.outputs.token }}
    steps:
      - name: Generate and save AAD Token
        run: |
          echo "DATABRICKS_TOKEN=$(curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
          https://login.microsoftonline.com/${{ secrets.AZURE_SP_TENANT_ID }}/oauth2/v2.0/token \
          -d 'client_id=${{ secrets.AZURE_SP_APPLICATION_ID }}' \
          -d 'grant_type=client_credentials' \
          -d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
          -d 'client_secret=${{ secrets.AZURE_SP_CLIENT_SECRET }}' |  jq -r  '.access_token')" >> $GITHUB_ENV
      - name: token-to-env
        run: echo 1
        env: 
          TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      # - id: set-output
      #   run: | echo "::set-output name=token::${{ secrets.DATABRICKS_TOKEN }}"
      - id: set-output
        run: echo "::set-output name=token::${{ env.TOKEN }}"
      - name: print-token 
        run: echo ${{ env.token }}
      - name: print-output
        run: echo ${{ steps.set-output.outputs.token }}
        
  ingest:
    runs-on: ubuntu-latest
    needs: generate-databricks-token
    strategy: 
      matrix:
        notebooks: 
          - 1.ingest_circuits_file
          - 2.ingest_races_file
          - 3.ingest_constructors_file
    steps:
      - name: echo-token
        run: echo ${{needs.generate-databricks-token.outputs.token}}    
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: ${{ matrix.ingestion }}
        uses: databricks/run-notebook@v0
        with:
          workspace-notebook-path: /formula1/ingestion/${{ matrix.ingestion }}
          databricks-host: https://adb-8718332331325895.15.azuredatabricks.net
          databricks-token: ${{ secrets.DATABRICKS_TOKEN }}
          git-commit: ${{ github.event.pull_request.head.sha }}
          existing-cluster-id: 0703-104318-wm62xcqc


